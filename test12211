public Mono<Object> extractRequestBody(ServerHttpRequest request) {
    if (request.getMethod() == HttpMethod.GET || request.getMethod() == HttpMethod.DELETE) {
        // For GET and DELETE requests, return an empty string or empty DataBuffer
        return Mono.just("");
    }

    String contentType = request.getHeaders().getFirst(HttpHeaders.CONTENT_TYPE);
    if (contentType != null && contentType.equals(MediaType.APPLICATION_JSON_VALUE)) {
        // Handle JSON request body (convert to String)
        return DataBufferUtils.join(request.getBody())
                .flatMap(dataBuffer -> {
                    byte[] requestBodyBytes = new byte[dataBuffer.readableByteCount()];
                    dataBuffer.read(requestBodyBytes);
                    DataBufferUtils.release(dataBuffer); // Release the DataBuffer
                    // Convert bytes to String (for JSON)
                    String requestBody = new String(requestBodyBytes, StandardCharsets.UTF_8);
                    return Mono.just(requestBody);
                })
                .switchIfEmpty(Mono.just("")); // Return empty string if no body
    } else {
        // Handle other content types (e.g., file uploads)
        return DataBufferUtils.join(request.getBody())
                .flatMap(dataBuffer -> {
                    return Mono.just(dataBuffer); // Return DataBuffer for binary data (e.g., files)
                })
                .switchIfEmpty(Mono.just(new DefaultDataBufferFactory().wrap(new byte[0]))); // Return empty DataBuffer if no body
    }
}
