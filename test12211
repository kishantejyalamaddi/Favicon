String contentType = request.getHeaders().getFirst(HttpHeaders.CONTENT_TYPE);
if (contentType == null) {
    contentType = MediaType.APPLICATION_JSON_VALUE;
}

WebClient.RequestBodySpec requestSpec = webClient
        .method(request.getMethod())
        .uri(targetHostName + finalNewPath)
        .header(HttpHeaders.AUTHORIZATION, "Bearer " + token)
        .header(HttpHeaders.CONTENT_TYPE, contentType);

// Copy user-added headers from ServerHttpRequest to WebClient.RequestBodySpec
request.getHeaders().forEach((headerName, headerValues) -> {
    if (!excludedHeaders.contains(headerName) && !headerName.toLowerCase().startsWith("x-")) {
        logger.info("Header to forward: {}", headerName);
        headerValues.forEach(value -> requestSpec.header(headerName, value));
    }
});

if (request.getMethod() == HttpMethod.POST || request.getMethod() == HttpMethod.PUT) {
    return requestSpec
            .body(BodyInserters.fromDataBuffers(request.getBody()))
            .exchangeToMono(response -> response.toEntity(String.class)
                    .flatMap(resEntity -> handleResponse(exchange, resEntity)));
} else {
    return requestSpec
            .exchangeToMono(response -> response.toEntity(String.class)
                    .flatMap(resEntity -> handleResponse(exchange, resEntity)));
}
