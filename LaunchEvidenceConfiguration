package com.wk.gbs.dc.configuration;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.oxm.jaxb.Jaxb2Marshaller;
import org.springframework.ws.client.core.WebServiceTemplate;

import com.wk.gbs.dc.service.order.integration.IIBLaunchEvidenceClient;

/**
 * This is to configure web service template for LaunchEvidence
 * 
 * @author Kishan.Yalamaddi
 *
 */
@Configuration
@PropertySource("classpath:config/application-${spring.profiles.active}.properties")
public class LaunchEvidenceConfiguration {
	
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@Value("${IIB_LAUNCHEVIDENCE_SERVICE_ENDPOINT}")
	private String IIB_LAUNCHEVIDENCE_SERVICE_ENDPOINT;
	
	/**
	 * 
	 * @return
	 */
	@Bean
	public Jaxb2Marshaller launchEvidencemarshaller() {
		Jaxb2Marshaller marshaller = new Jaxb2Marshaller();
		// this package must match the package in the <generatePackage> specified in
		// pom.xml
		marshaller.setContextPath("com.wk.gbs.dc.launchEvidence");
		return marshaller;
	}

	/**
	 * Creating WebService Template Object to invoke SOAP Web Service
	 * 
	 * @return WebServiceTemplate
	 */
	@Bean
	public WebServiceTemplate launchEvidenceWebServiceTemplate() {
		WebServiceTemplate wsTemplate = new WebServiceTemplate();
		wsTemplate.setMarshaller(launchEvidencemarshaller());
		wsTemplate.setUnmarshaller(launchEvidencemarshaller());
		return wsTemplate;
	}

	/**
	 * Creating IIBServiceClientObject for Invoking IIBService Call
	 * 
	 * @return
	 */
	@Bean
	public IIBLaunchEvidenceClient launchEvidenceWebServiceClient() {
		IIBLaunchEvidenceClient serviceClient = new IIBLaunchEvidenceClient();
		serviceClient.setUrl(IIB_LAUNCHEVIDENCE_SERVICE_ENDPOINT);
		serviceClient.setWebServiceTemplate(launchEvidenceWebServiceTemplate());
		logger.info("Started Launch Evidence");
		return serviceClient;
	}

}
